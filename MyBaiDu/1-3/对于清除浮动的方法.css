
/*（1）原始版本*/
/*.clearfix:after {
    content: ".";  生成内容作为最后一个元素，至于content里面是点还是其他都是可以的，例如oocss里面就有经典的 content:”XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX”,有些版本可能content 里面内容为空,不推荐这样做的,firefox直到7.0 content:”” 仍然会产生额外的空隙；
    display: block;  使生成的元素以块级元素显示,占满剩余空间;
    height: 0;          避免生成内容破坏原有布局的高度。
    clear: both;   通过分析发现，除了clear：both用来闭合浮动的，其他代码无非都是为了隐藏掉content生成的内容，这也就是其他版本的闭合浮动为什么会有font-size：0，line-height：0。
    visibility: hidden;  使生成的内容不可见，并允许可能被生成内容盖住的内容可以进行点击和交互;
}
.clearfix{
     *zoom:1;   IE6-7不支持:after,使用zoom:1触发 hasLayout。
}
*/


/*（2）优化版本*/
.clearfix:after{
	content: "";
	display: table;
	clear: both;
}
.clearfix:after {
    content:"\200B";  /* 通过查询发现Unicode字符里有一个“零宽度空格”，也就是U+200B，这个字符本身是不可见的，所以我们完全可以省略掉 visibility:hidden了*/
    display:block;    /* 使生成的元素以块级元素显示,占满剩余空间;*/
    height:0;         /* 避免生成内容破坏原有布局的高度。*/
    clear:both;       /*通过分析发现，除了clear：both用来闭合浮动的，其他代码无非都是为了隐藏掉content生成的内容，这也就是其他版本的闭合浮动为什么会有font-size：0，line-height：0。*/
}
.clearfix{
     *zoom:1;   /*IE6-7不支持:after,使用zoom:1触发 hasLayout。*/
}

/*张旭鑫大神的clear方法*/
/*.clearfix:after{
	content: "";
	display: table;
	clear: both;
}
.clearfix{
     *zoom:1; 
}*/

/*（3）通过设置父元素overflow值设置为auto或者hidden;
.clear{
    overflow:auto;  或者是overflow:hidden;
    *zoom:1;  在IE6中还需要触发hasLayout，例如zoom：1;
}*/



.box1{
    height:300px;
    width: 300px;
    background:#99FF33;
}
.box2{
    height:100px;
    width: 300px;
    background:#FF99FF;
}
.left{
    float:left;
}
.right{
    float:left;
}
.wrap{
    border:solid 1px black; 
    background-color: red;
    width: 85%;
    margin:  0 auto;
}
.footer{
    background:lightblue;
}